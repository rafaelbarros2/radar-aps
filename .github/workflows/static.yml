name: Deploy Angular to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          npm ci

      # Se seu projeto usa baseHref diferente, ajuste a flag abaixo.
      - name: Build Angular (prod)
        run: |
          npx ng build --configuration production

      - name: Resolve dist path (Angular SPA/SSR)
        id: distpath
        shell: bash
        run: |
          set -euo pipefail

          # Tenta ler o "application" do angular.json; se não achar, pega o primeiro projeto
          PROJECT="$(node -e "try{const a=require('./angular.json');const k=Object.keys(a.projects||{});if(!k.length){process.exit(2)}const p=k.find(p=>a.projects[p]?.projectType==='application')||k[0];process.stdout.write(p);}catch(e){process.exit(3)}" || true)"

          # Candidatos de saída
          C1=""
          C2=""
          if [[ -n "${PROJECT}" ]]; then
            [[ -d "dist/${PROJECT}/browser" ]] && C1="dist/${PROJECT}/browser"
            [[ -d "dist/${PROJECT}"       ]] && C2="dist/${PROJECT}"
          fi

          # Fallback com find (SSR -> 'browser' primeiro; depois qualquer 'dist/*')
          F1="$(find dist -type d -path "dist/*/browser" -print -quit 2>/dev/null || true)"
          F2="$(find dist -maxdepth 1 -mindepth 1 -type d -print -quit 2>/dev/null || true)"

          # Escolha final por ordem de preferência
          PATH_OUT="${C1:-${C2:-${F1:-${F2}}}}"

          if [[ -n "${PATH_OUT}" && -d "${PATH_OUT}" ]]; then
            echo "path=${PATH_OUT}" >> "$GITHUB_OUTPUT"
            echo "Detected dist path: ${PATH_OUT}"
          else
            echo "Nenhuma pasta dist encontrada. Conteúdo de dist/:" >&2
            ls -R dist || true
            exit 1
          fi

      - name: Upload artifact to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.distpath.outputs.path }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
