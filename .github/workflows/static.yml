name: Deploy Angular to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      # Build Angular (ajuste o base-href conforme o nome do repositório)
      - name: Build Angular
        run: npx ng build --configuration production --base-href "/radar-aps/"

      # Detecta a pasta correta do build
      - name: Set dist path
        id: dist
        shell: bash
        run: |
          PROJECT=$(node -e "const a=require('./angular.json');console.log(Object.keys(a.projects).find(p=>a.projects[p].projectType==='application')||Object.keys(a.projects)[0])")
          PROJECT_LOWER=$(echo "$PROJECT" | tr '[:upper:]' '[:lower:]')
          
          echo "Projeto detectado: $PROJECT"
          echo "Pasta esperada: dist/$PROJECT_LOWER"
          echo "Verificando estrutura de dist/:"
          ls -la dist/
          
          if [ -d "dist/$PROJECT_LOWER/browser" ]; then
            echo "path=dist/$PROJECT_LOWER/browser" >> $GITHUB_OUTPUT
            echo "Usando dist: dist/$PROJECT_LOWER/browser"
          elif [ -d "dist/$PROJECT_LOWER" ]; then
            echo "path=dist/$PROJECT_LOWER" >> $GITHUB_OUTPUT
            echo "Usando dist: dist/$PROJECT_LOWER"
          else
            echo "Erro: Pasta dist não encontrada para projeto $PROJECT"
            echo "Conteúdo completo de dist/:"
            ls -R dist/
            exit 1
          fi

      # SPA fallback para funcionar refresh em rotas
      - name: SPA 404 fallback
        shell: bash
        run: |
          if [ -f "${{ steps.dist.outputs.path }}/index.html" ]; then
            cp "${{ steps.dist.outputs.path }}/index.html" "${{ steps.dist.outputs.path }}/404.html"
          else
            echo "index.html não encontrado em ${{ steps.dist.outputs.path }}"
            exit 1
          fi

      - uses: actions/upload-pages-artifact@v3
        with:
          path: "${{ steps.dist.outputs.path }}"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
