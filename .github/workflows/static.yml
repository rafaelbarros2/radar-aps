name: Deploy Angular to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      # Instala usando npm ci se houver package-lock.json; senÃ£o cai para npm install
      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      # Build SPA (ajuste o base-href se seu repo mudar)
      - name: Build Angular
        run: npx ng build --configuration production --base-href "/radar-aps/"

      # Detecta onde o Angular gerou (SSR vs SPA)
      - name: Detect dist path
        id: dist
        shell: bash
        run: |
          PROJECT=$(node -e "console.log(Object.keys(require('./angular.json').projects)[0])")
          if [ -d "dist/$PROJECT/browser" ]; then
            echo "path=dist/$PROJECT/browser" >> $GITHUB_OUTPUT
          else
            echo "path=dist/$PROJECT" >> $GITHUB_OUTPUT
          fi

      # Fallback para rotas no refresh (SPA)
      - name: SPA 404 fallback
        run: |
          cp "${{ steps.dist.outputs.path }}/index.html" "${{ steps.dist.outputs.path }}/404.html"

      - uses: actions/upload-pages-artifact@v3
        with:
          path: "${{ steps.dist.outputs.path }}"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
